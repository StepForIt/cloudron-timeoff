# ------------------------------------------------
# Stage 1: Git clone
FROM alpine:3.19 as cloner

RUN apk add --no-cache git
WORKDIR /app
RUN git clone https://github.com/timeoff-management/application.git timeoff

# ------------------------------------------------
# Stage 2: Build with Node.js and required tools
FROM node:14 as builder

# Install build dependencies
RUN apt update && apt install -y \
    python3 \
    make \
    g++ \
    sqlite3 \
    libsqlite3-dev \
    && ln -sf python3 /usr/bin/python

WORKDIR /app/timeoff
COPY --from=cloner /app/timeoff .

# Install dependencies
RUN npm install 
RUN npm install pg@8

# ------------------------------------------------
# Stage 3: Final image (runtime only)
FROM cloudron/base:4.2.0@sha256:46da2fffb36353ef714f97ae8e962bd2c212ca091108d768ba473078319a47f4

RUN mkdir -p /app/code/db && chown -R cloudron:cloudron /app/code

WORKDIR /app/code

ARG NODE_VERSION=14.9.0
RUN mkdir -p /usr/local/node-${NODE_VERSION} && curl -L https://nodejs.org/dist/v${NODE_VERSION}/node-v${NODE_VERSION}-linux-x64.tar.gz | tar zxf - --strip-components 1 -C /usr/local/node-${NODE_VERSION}
ENV PATH /usr/local/node-${NODE_VERSION}/bin:$PATH

# Copy app + pre-built node_modules
COPY --from=builder /app/timeoff .

RUN mkdir -p /app/data/config

RUN cp ./config/db.json /app/data/config/db.json && \
    cp ./config/app.json /app/data/config/app.json

RUN mv ./config/db.json ./config/db.json.backup && \
    mv ./config/app.json ./config/app.json.backup && \
    cp ./bin/wwww ./bin/wwww.backup

RUN ln -s /app/data/config/db.json /app/code/config/db.json
RUN ln -s /app/data/config/app.json /app/code/config/app.json

RUN sed -i "s/app\.listen(app.get('port')/app.listen(app.get('port'), '0.0.0.0'/" /app/code/bin/wwww

COPY start.sh /app/code/
RUN chmod +x /app/code/start.sh

CMD [ "/app/code/start.sh"]